{"version":3,"file":"937.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/react-native-vector-icons/MaterialIcons.js","webpack:///./node_modules/react-native-vector-icons/lib/create-icon-set.js","webpack:///./node_modules/react-native-vector-icons/lib/create-icon-source-cache.js","webpack:///./node_modules/react-native-vector-icons/lib/ensure-native-module-available.js","webpack:///./node_modules/react-native-vector-icons/lib/icon-button.js","webpack:///./node_modules/react-native-vector-icons/lib/object-utils.js","webpack:///./node_modules/prop-types/factoryWithThrowingShims.js","webpack:///./node_modules/prop-types/index.js","webpack:///./node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["/**\n * MaterialIcons icon set component.\n * Usage: <MaterialIcons name=\"icon-name\" size={20} color=\"#4F8EF7\" />\n */\n\nimport createIconSet from './lib/create-icon-set';\nimport glyphMap from './glyphmaps/MaterialIcons.json';\n\nconst iconSet = createIconSet(glyphMap, 'Material Icons', 'MaterialIcons.ttf');\n\nexport default iconSet;\nexport const {\n  Button,\n  getImageSource,\n  getImageSourceSync,\n} = iconSet;\n\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  NativeModules,\n  Platform,\n  PixelRatio,\n  processColor,\n  Text,\n} from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\n\nexport const NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  const IconNamePropType = PropTypes.oneOf(Object.keys(glyphMap));\n\n  class Icon extends PureComponent {\n    root = null;\n\n    static propTypes = {\n      allowFontScaling: PropTypes.bool,\n      name: IconNamePropType,\n      size: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    setNativeProps(nativeProps) {\n      if (this.root) {\n        this.root.setNativeProps(nativeProps);\n      }\n    }\n\n    handleRef = ref => {\n      this.root = ref;\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n      props.ref = this.handleRef;\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n","const TYPE_VALUE = 'value';\nconst TYPE_ERROR = 'error';\n\nexport default function createIconSourceCache() {\n  const cache = new Map();\n\n  const setValue = (key, value) =>\n    cache.set(key, { type: TYPE_VALUE, data: value });\n\n  const setError = (key, error) =>\n    cache.set(key, { type: TYPE_ERROR, data: error });\n\n  const has = key => cache.has(key);\n\n  const get = key => {\n    if (!cache.has(key)) {\n      return undefined;\n    }\n    const { type, data } = cache.get(key);\n    if (type === TYPE_ERROR) {\n      throw data;\n    }\n    return data;\n  };\n\n  return { setValue, setError, has, get };\n}\n","import { Platform, NativeModules } from 'react-native';\n\nconst NativeIconAPI =\n  NativeModules.RNVectorIconsManager || NativeModules.RNVectorIconsModule;\n\nexport default function ensureNativeModuleAvailable() {\n  if (!NativeIconAPI) {\n    if (Platform.OS === 'android') {\n      throw new Error(\n        'RNVectorIconsModule not available, did you properly integrate the module? Try running `react-native link react-native-vector-icons` and recompiling.'\n      );\n    }\n    throw new Error(\n      'RNVectorIconsManager not available, did you add the library to your project and link with libRNVectorIcons.a? Try running `react-native link react-native-vector-icons` and recompiling.'\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\nimport { pick, omit } from './object-utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {typeof children === 'string' ? (\n              <Text style={[styles.text, colorStyle]} selectable={false}>\n                {children}\n              </Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n","const pick = (obj, ...keys) =>\n  keys\n    .flat()\n    .filter(key => Object.prototype.hasOwnProperty.call(obj, key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n\nconst omit = (obj, ...keysToOmit) => {\n  const keysToOmitSet = new Set(keysToOmit.flat());\n  return Object.getOwnPropertyNames(obj)\n    .filter(key => !keysToOmitSet.has(key))\n    .reduce((acc, key) => {\n      acc[key] = obj[key];\n      return acc;\n    }, {});\n};\n\nmodule.exports = { pick, omit };\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["iconSet","createIconSet","glyphMap","Button","getImageSource","getImageSourceSync","fontFamily","fontFile","fontStyle","fontBasename","replace","fontReference","Platform","select","windows","android","web","default","IconNamePropType","PropTypes","oneOf","Object","keys","Icon","root","handleRef","ref","nativeProps","this","setNativeProps","props","name","size","color","style","children","glyph","String","fromCodePoint","styleDefaults","fontSize","styleOverrides","fontWeight","Text","selectable","PureComponent","propTypes","allowFontScaling","bool","number","any","node","defaultProps","DEFAULT_ICON_SIZE","imageSourceCache","createIconSourceCache","resolveGlyph","DEFAULT_ICON_COLOR","ensureNativeModuleAvailable","processedColor","processColor","cacheKey","has","get","imagePath","NativeIconAPI","getImageForFont","value","uri","scale","PixelRatio","setValue","error","setError","file","OS","Error","loadFontWithFileName","split","createIconButtonComponent","getImageForFontSync","loadFont","hasIcon","prototype","hasOwnProperty","call","getRawGlyphMap","getFontFamily","NativeModules","RNVectorIconsManager","RNVectorIconsModule","cache","Map","key","set","type","data","TYPE_ERROR","iconStyle","restProps","iconProps","pick","TEXT_PROP_NAMES","touchableProps","TOUCHABLE_PROP_NAMES","omit","styles","icon","colorStyle","blockStyle","TouchableHighlight","touchable","View","container","text","backgroundColor","oneOfType","string","borderRadius","StyleSheet","create","flexDirection","justifyContent","alignItems","padding","overflow","marginRight","module","exports","obj","flat","filter","reduce","acc","keysToOmit","keysToOmitSet","Set","getOwnPropertyNames","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","func","object","symbol","arrayOf","element","elementType","instanceOf","objectOf","shape","exact","checkPropTypes"],"sourceRoot":""}